<?xml version="1.0" encoding="utf-8"?>

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" ToolsVersion="4.0">
<!--
==========================================================================================

    This file contains the properties most likely to change from project to project
    and branch to Branch.

==========================================================================================
-->
     <!-- DropControl -->
     <PropertyGroup>
        <Group>PQO</Group>
        <Product>CommonWorkflowSystem</Product>
        <DropDir>$(Group)\$(Product)</DropDir>
        <DropSuffix>Bin</DropSuffix>
        <CopyDumpFolder>false</CopyDumpFolder>
        <DropToShare></DropToShare>
        <BinDir>_Binaries</BinDir>
      </PropertyGroup>

      <!-- Overrideable "global" properties -->
      <PropertyGroup>
        <PublicsRoot>$(BranchRoot)\..\Public</PublicsRoot>
      </PropertyGroup>

      <!-- Test Control -->
      <PropertyGroup>
        <FailBuildOnUnitTestsFailure>true</FailBuildOnUnitTestsFailure>
        <SendUnitTestEmail></SendUnitTestEmail>
        <TestDataFile>$(BranchRoot)\_Branch_Tests.proj</TestDataFile>
        <RunConfigFile>$(BranchRoot)\Test.TestRunConfig</RunConfigFile>
      </PropertyGroup>

      <!-- Tools Control -->
      <PropertyGroup>
        <WixRoot>$(PublicsRoot)\Wix</WixRoot>
        <UseCodeContracts></UseCodeContracts>
        <RunCodeAnalysis></RunCodeAnalysis>
        <CodeAnalysisTreatWarningsAsErrors>false</CodeAnalysisTreatWarningsAsErrors>
        <StyleCopEnabled></StyleCopEnabled>
        <StyleCopTreatErrorsAsWarnings>true</StyleCopTreatErrorsAsWarnings>
      </PropertyGroup>

      <!-- Version/PlaceFile/PostBuild Control -->
      <PropertyGroup>
        <UseDependencyMapperForBranch></UseDependencyMapperForBranch>
        <VersionFiles>$(BranchRoot)\**\AssemblyInfo.cs</VersionFiles>
        <BuildNumberIncrementType>BuildOnly</BuildNumberIncrementType>
        <UsingPlaceFiles></UsingPlaceFiles>
        <BinPlaceDir>BinPlaced</BinPlaceDir>
        <PostCompileTargetsFile></PostCompileTargetsFile>
        <PostCompilePropertyNames></PostCompilePropertyNames>
        <PostBuildTargetsFile></PostBuildTargetsFile>
        <PostBuildPropertyNames></PostBuildPropertyNames>
        <TFSBuildInfoPropNames></TFSBuildInfoPropNames>
      </PropertyGroup>

      <!--
      used to specify item groups from SolutionToBuild on a per build type basis 
      Note that Property $(BuildType) is user-defined but has to case match the Include
      AdditionalBuildFlags is a semicolon delimited list of property names that will be given a true value
      if listed.
      -->
      <ItemGroup>
        <BuildGroup Include ="Full">
          <BuildItems>SolutionToBuild;MSIToBuild</BuildItems>
          <AdditionalBuildFlags>RunUnitTests</AdditionalBuildFlags>
        </BuildGroup>
        <BuildGroup Include ="IGCL">
          <BuildItems>SolutionToBuild;MSIToBuild</BuildItems>
          <AdditionalBuildFlags>IncrementalGet;RunUnitTests</AdditionalBuildFlags>
        </BuildGroup>
        <BuildGroup Include ="Incr">
          <BuildItems>SolutionToBuild;MSIToBuild</BuildItems>
          <AdditionalBuildFlags>IncrementalGet;IncrementalBuild;RunUnitTests</AdditionalBuildFlags>
        </BuildGroup>
        <BuildGroup Include ="Desktop">
          <BuildItems>$(DevBuildItems)</BuildItems>
          <AdditionalBuildFlags></AdditionalBuildFlags>
        </BuildGroup>
      </ItemGroup>



<!-- Customizeable outdir properties -->
      <PropertyGroup>                                                                                                     
        <CustomizableOutdir>true</CustomizableOutdir>
        <IncludeBinOutInCustomOutDir></IncludeBinOutInCustomOutDir>               <!-- Default is false -->
        <IncludeFolderPathInCustomOutDir></IncludeFolderPathInCustomOutDir>       <!-- Default is false -->
        <IncludeSolutionNameInCustomOutDir></IncludeSolutionNameInCustomOutDir>   <!-- Default is true  -->
        <SmtpServer>smtphost.redmond.corp.microsoft.com</SmtpServer>
      </PropertyGroup>                                                                                                     

<!-- Override Drop and source folders here. Override Value to re-root the platform drop/source Locations.
     The substring before _Platform or _Flavor must match a valid platform or flavor to be picked up. the exception
     is if you have embedded spaces. Since these are dereferenced into Property names there can be no spaces. the _
     is added to Any CPU to create the property name matching the Identity below.
--> 

<!--
     <ItemGroup>
       <DropControl Include = "Any_CPU_PlatformDropOverride">   <Value>MyAnyCpuDropName</Value>     </DropControl>
       <DropControl Include = "Win32_PlatformDropOverride">     <Value>MyWin32DropName</Value>      </DropControl>
       <DropControl Include = "x64_PlatformDropOverride">       <Value>Myx64DropName</Value>        </DropControl>

       <DropControl Include = "Any_CPU_PlatformSourceOverride"> <Value>MyAnyCpuSourceName</Value>   </DropControl>
       <DropControl Include = "Win32_PlatformSourceOverride">   <Value>MyWin32SourceName</Value>    </DropControl>
       <DropControl Include = "x64_PlatformSourceOverride">     <Value>Myx64SourceName</Value>      </DropControl>

       <DropControl Include = "Release_FlavorDropOverride">     <Value>MyReleaseDropName</Value>    </DropControl>
       <DropControl Include = "Debug_FlavorDropOverride">       <Value>MyDebugDropName</Value>      </DropControl>
       <DropControl Include = "Cover_FlavorDropOverride">       <Value>MyCoverDropName</Value>      </DropControl>

       <DropControl Include = "Release_FlavorSourceOverride">   <Value>MyReleaseSourceName</Value>  </DropControl>
       <DropControl Include = "Debug_FlavorSourceOverride">     <Value>MyDebugSourceName</Value>    </DropControl>
       <DropControl Include = "Cover_FlavorSourceOverride">     <Value>MyCoverSourceName</Value>    </DropControl>
     </ItemGroup>
 -->

  <!-- 
  These next three item groups are change the behavior of CustomizableOutDir and are only in effect
  when CustomizableOutDir is set to true.

  There are three ways to modify the behavior deriving from the different ways that
  dbproj and csproj drop the default compile output. The first item group lets you gather
  output underneath Bin\$(Configuration) and Sql\$(Configuration) and then apply an offset
  to each group of outputs the solution relative location under $(OutDir). For instance if you 
  wanted to group SQL and csproj and websites differently, you would modfiy the Value Metadata
  for each itemgroup.
  This ItemGroup is required since it gathers the output from the compilation.
  -->      

      <ItemGroup>
        <CustomizableOutputBinOutMappings Include = "SQL">
          <Value></Value>
        </CustomizableOutputBinOutMappings>
        <CustomizableOutputBinOutMappings Include = "Bin">
          <Value></Value>
        </CustomizableOutputBinOutMappings>
      </ItemGroup>
 
  <!-- 
   In addition to the grouping of compile outputs there is an additional remapping
   that can be applied based on the directory structure in the source tree. The following
   remappings are applied to the relative path and allow for a regex string replacment
   on a per directory basis. The usual procedure will be to map just the first level of the
   relative dir but any SINGLE regex per path can be applied. It is important that there not
   be overlap of the regex. i.e. one directory string having a match on multiple regex 
   statements or only the last one will be applied.

   Keep in mind that the Include is a regular expression. "\" has to be "\\"
   For instance, in the example below, a source structure of 
   
   Test
    MySolutionDir
   
 Would drop all content under 
   
   Test
    MyNewFolderMapping
 
 This lets you reorg a drop based on source folder name.
 

      <ItemGroup>
        <CustomizableOutputFolderMappings Include = "MySolutionDir"> 
          <Value>MyNewFolderMapping</Value>
        </CustomizableOutputFolderMappings>
      </ItemGroup>
   -->

<!--
   Lastly, if $(IncludeSolutionNameInCustomOutDir) is not false, then the last ItemGroup for 
   this performs a regex as noted above against the SolutionName to allow per solution modification.
  
      <ItemGroup>
        <CustomizableOutputSolutionMappings Include = "MySolutionNameToMap"> 
          <Value>MyNewSolutionDir</Value>
        </CustomizableOutputSolutionMappings>
      </ItemGroup>
-->

<!-- This section is used to Lookup the _Build_Props.proj file and has to work for desktop and Team build -->
<!-- DO not change this section -->

      <PropertyGroup>
        <BuildPropsFile Condition ="'$(BuildPropsFile)' == ''">_Build_Props.proj</BuildPropsFile>
      </PropertyGroup>

  <Import Project="$(BuildFolder)\$(BuildPropsFile)"/>

</Project>
