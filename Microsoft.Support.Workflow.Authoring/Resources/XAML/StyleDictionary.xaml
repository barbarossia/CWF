<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
					xmlns:t="http://schemas.telerik.com/2008/xaml/presentation"
					xmlns:view="clr-namespace:Microsoft.Support.Workflow.Authoring.Views"        
					xmlns:convert="clr-namespace:Microsoft.Support.Workflow.Authoring.Common.Converters"
					xmlns:System_Activities_Presentation_Toolbox="clr-namespace:System.Activities.Presentation.Toolbox;assembly=System.Activities.Presentation" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:System_Activities_Presentation_Validation="clr-namespace:System.Activities.Presentation.Validation;assembly=System.Activities.Presentation"        
		xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"        
		>
	<Style x:Key="WindowStyle" TargetType="{x:Type Window}">
		<Style.Resources>
			<DrawingImage x:Key="WindowIconImage">
				<DrawingImage.Drawing>
					<ImageDrawing Rect="0,0,32,32" ImageSource="..\Images\Foundry.png" />
				</DrawingImage.Drawing>
			</DrawingImage>
		</Style.Resources>
		<Setter Property="Background" Value="#FFF9F9F9"/>
		<Setter Property="TaskbarItemInfo">
			<Setter.Value>
                <TaskbarItemInfo Overlay="..\Images\Foundry.png" />
			</Setter.Value>
		</Setter>
		<Setter Property="Icon" Value="{StaticResource WindowIconImage}" />
	</Style>
	<Style TargetType="{x:Type DataGridCell}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Grid Background="{TemplateBinding Background}">
						<ContentPresenter VerticalAlignment="Center" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="TextStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="White" />
	</Style>
	<Style x:Key="TitleTextStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="#FFF07522"/>
		<Setter Property="FontFamily" Value="Segoe UI Semibold"/>
	</Style>
		
		<!--Style for RadBusyIndicator-->
	<Style x:Key="CustomProgressBarStyle" TargetType="{x:Type t:RadProgressBar}">
		<Setter Property="Foreground" Value="#FF027DB8" />
		<Setter Property="Background" Value="#FFD2D5D8" />
		<Setter Property="Height" Value="52" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Maximum" Value="100" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint=".5,1" StartPoint=".5,0">
					<GradientStop Color="#FFAEB7BF" Offset="0" />
					<GradientStop Color="#FF919EA7" Offset="0.35" />
					<GradientStop Color="#FF7A8A99" Offset="0.35" />
					<GradientStop Color="#FF647480" Offset="1" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Margin" Value="0,0,0,-52" />
	</Style>

	<!-- Styles to support ToolboxControl Look And Feel -->
	<!--<Style x:Key="TreeViewItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ToolboxCategoryStyle" TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="1,0,0,0"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
		<Setter Property="IsExpanded" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid view:AutoScrollPreventerBehavior.Prevent="True" >
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="19" Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<ToggleButton x:Name="Expander" Focusable="False" Margin="1" MinWidth="0" MinHeight="0"
									  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" >
							<ToggleButton.Template>
								<ControlTemplate TargetType="{x:Type ToggleButton}">
									<Border Padding="{TemplateBinding Padding}">
										<Grid Background="Transparent" SnapsToDevicePixels="False">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="19"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>
											<Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
											<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
											<ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
										</Grid>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger Property="IsChecked" Value="true">
											<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
										</Trigger>
										<Trigger Property="IsMouseOver" Value="true">
											<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
											<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
										</Trigger>
										<Trigger Property="IsPressed" Value="true">
											<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
											<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
											<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</ToggleButton.Template>
						</ToggleButton>
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
							<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</Border>
						<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="1" Grid.Row="1"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel/>
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
			<DataTrigger Binding="{Binding CategoryName}" Value="Advanced">
				<Setter Property="IsExpanded" Value="false"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<DataTemplate x:Key="ActivityToolTemplateWithIcons" DataType="{x:Type System_Activities_Presentation_Toolbox:ToolboxItemWrapper}">
		<DataTemplate.Resources>
			<view:ActivityTypeToIconConverter x:Key="iconConverter"/>
			<convert:ActivityTypeToToolTipConverter x:Key="activityTypeToToolTipConverter" />
		</DataTemplate.Resources>
		<StackPanel Orientation="Horizontal" Margin="-31,0,0,0" ToolTip="{Binding Type, Converter={StaticResource activityTypeToToolTipConverter}}">
			<Rectangle Width="16" Height="16" Margin="0">
				<Rectangle.Fill>
					<DrawingBrush Drawing="{Binding Type, Converter={StaticResource iconConverter}}"/>
				</Rectangle.Fill>
			</Rectangle>
			<TextBlock Grid.Column="1" Margin="15,1,5,0" Text="{Binding DisplayName}" Uid="TextBlock_2"/>
		</StackPanel>
	</DataTemplate>-->

	<!-- Hover Brushes -->
	<LinearGradientBrush x:Key="HoverBackgroundBrushKey"
						 StartPoint="0,0"
						 EndPoint="0,1">
		<GradientStop Color="#FCFCFC"
					  Offset="0" />
		<GradientStop Color="#EBF3FD"
					  Offset="1" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="HoverOuterBorderBrushKey"
					 Color="#B8D6FB" />
	<SolidColorBrush x:Key="HoverInnerBorderBrushKey"
					 Color="#F2F7FE" />

	<!-- Selected (Active) Brushes -->
	<LinearGradientBrush x:Key="SelectedActiveBackgroundBrushKey"
						 StartPoint="0,0"
						 EndPoint="0,1">
		<GradientStop Color="#DCEBFC"
					  Offset="0" />
		<GradientStop Color="#C1DBFC"
					  Offset="1" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="SelectedActiveOuterBorderBrushKey"
					 Color="#7DA2CE" />
	<SolidColorBrush x:Key="SelectedActiveInnerBorderBrushKey"
					 Color="#EBF4FD" />

	<!-- Selected (Inactive) Brushes -->
	<LinearGradientBrush x:Key="SelectedInactiveBackgroundBrushKey"
						 StartPoint="0,0"
						 EndPoint="0,1">
		<GradientStop Color="#F8F8F8"
					  Offset="0" />
		<GradientStop Color="#E5E5E5"
					  Offset="1" />
	</LinearGradientBrush>
	<SolidColorBrush x:Key="SelectedInactiveOuterBorderBrushKey"
					 Color="#D9D9D9" />
	<SolidColorBrush x:Key="SelectedInactiveInnerBorderBrushKey"
					 Color="#F0F0F0" />

	<!-- ListBoxItem Style -->
	<Style x:Key="{x:Type ListBoxItem}"
		   TargetType="{x:Type ListBoxItem}">
		<Setter Property="BorderThickness"
				Value="1" />
		<Setter Property="Padding"
				Value="2,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid>
						<Border x:Name="outerBorder"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="2"
								SnapsToDevicePixels="true">
							<Border x:Name="innerBorder"
									Background="{TemplateBinding Background}"
									BorderThickness="1"
									CornerRadius="1"
									Padding="{TemplateBinding Padding}"
									SnapsToDevicePixels="true">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver"
								 Value="true">
							<Setter TargetName="outerBorder"
									Property="BorderBrush"
									Value="{StaticResource HoverOuterBorderBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="Background"
									Value="{StaticResource HoverBackgroundBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="BorderBrush"
									Value="{StaticResource HoverInnerBorderBrushKey}" />
						</Trigger>
						<Trigger Property="IsSelected"
								 Value="true">
							<Setter TargetName="outerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedActiveOuterBorderBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="Background"
									Value="{StaticResource SelectedActiveBackgroundBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedActiveInnerBorderBrushKey}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected"
										   Value="true" />
								<Condition Property="Selector.IsSelectionActive"
										   Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="outerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedInactiveOuterBorderBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="Background"
									Value="{StaticResource SelectedInactiveBackgroundBrushKey}" />
							<Setter TargetName="innerBorder"
									Property="BorderBrush"
									Value="{StaticResource SelectedInactiveInnerBorderBrushKey}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled"
								 Value="false">
							<Setter Property="Foreground"
									Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="TabItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle SnapsToDevicePixels="true" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" Margin="3,3,3,1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#8C8E94"/>
	<LinearGradientBrush x:Key="TabItemHotBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#EAF6FD" Offset="0.15"/>
		<GradientStop Color="#D9F0FC" Offset=".5"/>
		<GradientStop Color="#BEE6FD" Offset=".5"/>
		<GradientStop Color="#A7D9F5" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="TabItemSelectedBackground" Color="#F9F9F9"/>
	<SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#3C7FB1"/>
	<SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
	<SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>

	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F3F3F3" Offset="0"/>
		<GradientStop Color="#EBEBEB" Offset="0.5"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#CDCDCD" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ButtonOverBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFFAFAFA" Offset="0"/>
		<GradientStop Color="#FFE0E0E3" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ButtonPressedBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFE0E0E2" Offset="0"/>
		<GradientStop Color="#FFF8F8F8" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF969696"/>
	<LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFFFFF" Offset="0"/>
		<GradientStop Color="#FFFBFF" Offset="0.5"/>
		<GradientStop Color="#F7F7F7" Offset="1"/>
	</LinearGradientBrush>
	
	<!--Toolbar Style-->
	<LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" EndPoint="1,0" StartPoint="0,0">
		<GradientStop Color="#ECECEC" Offset="0"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#A0A0A0" Offset="1"/>
	</LinearGradientBrush>
	<!-- Resource dictionary entries should be defined here. -->
	<SolidColorBrush x:Key="ToolBarButtonHover" Color="#C2E0FF"/>
	<SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6"/>
	<Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3" SnapsToDevicePixels="true">
						<Canvas HorizontalAlignment="Right" Height="6" Margin="2,7,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="7">
							<Path Data="M 1.5 1 L 1.5 6" Stroke="White"/>
							<Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}"/>
							<Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White"/>
							<Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}"/>
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
		<GradientStop Color="#FFFFFF" Offset="0"/>
		<GradientStop Color="#FFFBFF" Offset="0.5"/>
		<GradientStop Color="#F7F7F7" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#ECECEC" Offset="0"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#A0A0A0" Offset="1"/>
	</LinearGradientBrush>
	<Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" SnapsToDevicePixels="true">
						<Canvas HorizontalAlignment="Right" Height="7" Margin="7,2,2,2" SnapsToDevicePixels="true" VerticalAlignment="Bottom" Width="6">
							<Path Data="M 1 1.5 L 6 1.5" Stroke="White"/>
							<Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}"/>
							<Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" Fill="White"/>
							<Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}"/>
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<SolidColorBrush x:Key="ToolBarMenuBorder" Color="#808080"/>
	<SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FDFDFD"/>
	<Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Background="Transparent" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
						<Rectangle>
							<Rectangle.Fill>
								<DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" Viewport="0,0,4,4" ViewportUnits="Absolute" ViewboxUnits="Absolute">
									<DrawingBrush.Drawing>
										<DrawingGroup>
											<GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
											<GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
										</DrawingGroup>
									</DrawingBrush.Drawing>
								</DrawingBrush>
							</Rectangle.Fill>
						</Rectangle>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Cursor" Value="SizeAll"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
		<Setter Property="Margin" Value="0,0,11,0"/>
		<Setter Property="CornerRadius" Value="3,3,3,3"/>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="CornerRadius" Value="0,0,0,0"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ToolBarStyle" TargetType="{x:Type ToolBar}">
		<Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
						<Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
							<Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false">
								<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
									<Border x:Name="ToolBarSubMenuBorder" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1" Background="{StaticResource ToolBarSubMenuBackground}" RenderOptions.ClearTypeHint="Enabled">
										<ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
									</Border>
								</Microsoft_Windows_Themes:SystemDropShadowChrome>
							</Popup>
						</Grid>
						<Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
							<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
								<ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
								<ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</DockPanel>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsOverflowOpen" Value="true"/>
						<Trigger Property="Header" Value="{x:Null}">
							<Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="ToolBarTray.IsLocked" Value="true"/>
						<Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
							<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
							<Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
							<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
						</Trigger>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
							<Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
							<Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
							<Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
							<Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
							<Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
							<Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
							<Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
							<Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</DataTrigger>
		</Style.Triggers>
	</Style>
	
	<!-- Change opacity of button when its disabled -->
	<Style TargetType="{x:Type Image}" x:Key="ToolbarImageStyle">
		<Style.Triggers>
			<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type Button}, AncestorLevel=1}, Path=IsEnabled}" Value="False">
				<Setter Property="Opacity" Value="0.30"></Setter>
			</DataTrigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>