<Window
    x:Class="Microsoft.Support.Workflow.Authoring.MainWindow" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:t="http://schemas.telerik.com/2008/xaml/presentation" xmlns:local="clr-namespace:Microsoft.Support.Workflow.Authoring" xmlns:convert="clr-namespace:Microsoft.Support.Workflow.Authoring.Common.Converters" xmlns:converta="clr-namespace:Microsoft.Support.Workflow.Authoring.AddIns.Converters;assembly=Microsoft.Support.Workflow.Authoring.AddIns" xmlns:common="clr-namespace:Microsoft.Support.Workflow.Authoring.Common" xmlns:models="clr-namespace:Microsoft.Support.Workflow.Authoring.Models" xmlns:behaviors="clr-namespace:Microsoft.Support.Workflow.Authoring.Behaviors" xmlns:services="clr-namespace:Microsoft.Support.Workflow.Authoring.Services" xmlns:view="clr-namespace:Microsoft.Support.Workflow.Authoring.Views" xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
    Title="{Binding Title}"
    Icon="Resources\Images\Foundry.png"
    Height="740"
    Width="1200"
    MinHeight="480"
    MinWidth="640"
    WindowStartupLocation="CenterScreen"
    WindowState="Maximized"
    Closed="MainWindowClosed"
    behaviors:WindowClosingBehavior.Closing="{Binding ClosingCommand}"
    Name="mainWindow"
    SizeChanged="MainWindow_SizeChanged" xmlns:res="clr-namespace:Microsoft.Support.Workflow.Authoring.AddIns.Properties;assembly=Microsoft.Support.Workflow.Authoring.AddIns">
    <Window.Resources>
        <convert:NegativeNumberConverter
            x:Key="NegativeNumberConverter" />
        <convert:InverterBooleanConverter
            x:Key="BooleanInverterConverter" />
        <converta:BooleanToVisibilityConverter
            x:Key="VisibleWhenEnabledConverter"
            VisibleWhen="True" />
        <converta:BooleanToVisibilityConverter
            x:Key="VisibleWhenFalse"
            VisibleWhen="False" />
        <converta:EnvPermissionConverter
            x:Key="EnvPermissionConverter" />
    </Window.Resources>
    <Window.Style>
        <Style
            TargetType="{x:Type Window}">
            <Setter
                Property="shell:WindowChrome.WindowChrome">
                <Setter.Value>
                    <shell:WindowChrome
                        GlassFrameThickness="0"
                        CornerRadius="3,3,0,0"
                        CaptionHeight="36" />
                </Setter.Value>
            </Setter>
            <Setter
                Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="{x:Type local:MainWindow}">
                        <Border
                            BorderThickness="1"
                            Background="White"
                            CornerRadius="0,0,0,0"
                            BorderBrush="#FF999999">
                            <Border
                                BorderThickness="1"
                                CornerRadius="3,3,0,0"
                                BorderBrush="#FFFEFEFE">
                                <Grid>
                                    <Border
                                        Margin="{Binding Source={x:Static shell:SystemParameters2.Current}, Path=WindowNonClientFrameThickness}">
                                        <Grid>
                                            <AdornerDecorator>
                                                <ContentPresenter
                                                    Content="{TemplateBinding Content}" />
                                            </AdornerDecorator>
                                        </Grid>
                                    </Border>
                                    <StackPanel
                                        Orientation="Horizontal"
                                        Margin="0,5,5,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top">
                                        <Button
                                            x:Name="PART_MINIMIZE"
                                            Width="22"
                                            Margin="2,0"
                                            Click="PART_MINIMIZE_Click"
                                            ToolTipService.ToolTip="Minimize"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Background="Transparent">
                                            <Button.Template>
                                                <ControlTemplate
                                                    TargetType="{x:Type Button}">
                                                    <Border
                                                        BorderBrush="LightGray"
                                                        x:Name="bd"
                                                        Background="{TemplateBinding Background}"
                                                        BorderThickness="1">
                                                        <Image
                                                            Width="16"
                                                            Height="16"
                                                            Source="Resources\Images\appbar.minus.rest.png" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger
                                                            Property="IsMouseOver"
                                                            Value="true">
                                                            <Setter
                                                                Property="Background"
                                                                TargetName="bd"
                                                                Value="lightgray"></Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button
                                            Click="PART_MAXIMIZE_RESTORE_Click"
                                            Background="Transparent"
                                            BorderBrush="#FFCCCCCC"
                                            Margin="2,0"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                            <Button.Template>
                                                <ControlTemplate
                                                    TargetType="{x:Type Button}">
                                                    <Border
                                                        BorderBrush="LightGray"
                                                        x:Name="bd"
                                                        Background="{TemplateBinding Background}"
                                                        BorderThickness="1">
                                                        <Image
                                                            x:Name="image"
                                                            Margin="2"
                                                            Width="16"
                                                            Height="16"
                                                            Source="Resources\Images\MaxImage.png" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger
                                                            Property="IsMouseOver"
                                                            Value="true">
                                                            <Setter
                                                                Property="Background"
                                                                TargetName="bd"
                                                                Value="lightgray"></Setter>
                                                        </Trigger>
                                                        <DataTrigger
                                                            Binding="{Binding Path=WindowState,ElementName=mainWindow}"
                                                            Value="Maximized">
                                                            <Setter
                                                                TargetName="image"
                                                                Property="Source"
                                                                Value="Resources\Images\appbar.restore.rest.png"></Setter>
                                                            <Setter
                                                                Property="ToolTipService.ToolTip"
                                                                Value="Restore Down"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger
                                                            Binding="{Binding Path=WindowState,ElementName=mainWindow}"
                                                            Value="Normal">
                                                            <Setter
                                                                TargetName="image"
                                                                Property="Source"
                                                                Value="Resources\Images\MaxImage.png"></Setter>
                                                            <Setter
                                                                Property="ToolTipService.ToolTip"
                                                                Value="Maximize"></Setter>
                                                        </DataTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                        <Button
                                            x:Name="PART_CLOSE"
                                            Width="22"
                                            ToolTipService.ToolTip="Close"
                                            Command="{Binding CloseCommand}"
                                            BorderBrush="#FFCCCCCC"
                                            BorderThickness="0"
                                            Background="Transparent"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Margin="2,0">
                                            <Button.Template>
                                                <ControlTemplate
                                                    TargetType="{x:Type Button}">
                                                    <Border
                                                        x:Name="bd"
                                                        BorderBrush="LightGray"
                                                        Background="{TemplateBinding Background}"
                                                        BorderThickness="1">
                                                        <Image
                                                            Source="Resources\Images\appbar.close.rest.png"
                                                            Width="16"
                                                            Height="16" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger
                                                            Property="IsMouseOver"
                                                            Value="true">
                                                            <Setter
                                                                Property="Background"
                                                                TargetName="bd"
                                                                Value="lightgray"></Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Button.Template>
                                        </Button>
                                    </StackPanel>
                                    <TextBlock
                                        Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Title}"
                                        VerticalAlignment="Top"
                                        FontSize="13"
                                        HorizontalAlignment="Center"
                                        Foreground="#FF666666"
                                        Margin="36,8,0,0" />
                                    <StackPanel
                                        Orientation="Horizontal"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Left"
                                        Margin="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(shell:WindowChrome.WindowChrome).ResizeBorderThickness}"
                                        shell:WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Image
                                            Margin="10,0,0,0"
                                            Source="Resources\Images\Foundry.png"
                                            Width="{Binding Source={x:Static shell:SystemParameters2.Current}, Path=SmallIconSize.Width}" />
                                        <ToolBarTray
                                            Background="Transparent"
                                            IsEnabled="{Binding IsBusy, Converter={StaticResource BooleanInverterConverter}}">
                                            <ToolBar
                                                ToolBarTray.IsLocked="True"
                                                Style="{DynamicResource ToolBarStyle}"
                                                Background="Transparent">
                                                <Separator></Separator>
                                                <Button
                                                    Command="{Binding SaveFocusedWorkflowCommand}"
                                                    CommandParameter="ToServer"
                                                    ToolTipService.ToolTip="Save project (Ctrl+S)"
                                                    ToolBar.OverflowMode="Never">
                                                    <Image
                                                        Style="{DynamicResource ToolbarImageStyle}"
                                                        Width="16"
                                                        Height="16"
                                                        Source="Resources\Images\appbar.save.rest.png" />
                                                </Button>
                                                <Separator></Separator>
                                                <Button
                                                    Command="{Binding UndoCommand}"
                                                    ToolTipService.ToolTip="Undo (Ctrl+Z)"
                                                    ToolBar.OverflowMode="Never">
                                                    <Image
                                                        Style="{DynamicResource ToolbarImageStyle}"
                                                        Height="16"
                                                        Width="16"
                                                        Source="Resources\Images\appbar.undo.rest.png" />
                                                </Button>
                                                <Button
                                                    Command="{Binding RedoCommand}"
                                                    ToolTipService.ToolTip="Redo (Ctrl+Y)"
                                                    ToolBar.OverflowMode="Never">
                                                    <Image
                                                        Style="{DynamicResource ToolbarImageStyle}"
                                                        Height="16"
                                                        Width="16"
                                                        Source="Resources\Images\appbar.redo.rest.png" />
                                                </Button>
                                                <Separator></Separator>
                                                <Button
                                                    Command="{Binding RefreshCommand}"
                                                    ToolTipService.ToolTip="Refresh designer (F5)"
                                                    ToolBar.OverflowMode="Never">
                                                    <Image
                                                        Style="{DynamicResource ToolbarImageStyle}"
                                                        Height="16"
                                                        Width="16"
                                                        Source="Resources\Images\appbar.refresh.rest.png" />
                                                </Button>
                                                <Separator></Separator>
                                            </ToolBar>
                                        </ToolBarTray>
                                    </StackPanel>
                                    <StackPanel
                                        DataContext="{Binding UserInfo}"
                                        Margin="0,5,85,0"
                                        Orientation="Horizontal"
                                        VerticalAlignment="Top"
                                        HorizontalAlignment="Right">
                                        <StackPanel
                                            Orientation="Vertical"
                                            VerticalAlignment="Center">
                                            <StackPanel
                                                Orientation="Horizontal"
                                                HorizontalAlignment="Right">
                                                <TextBlock
                                                    FontSize="11"
                                                    Foreground="#FF454545"
                                                    Text="{x:Static res:Resources.UserInput}"
                                                    Margin="0,0,5,0"></TextBlock>
                                                <TextBlock
                                                    FontSize="11"
                                                    Foreground="#FF454545"
                                                    Text="{Binding UserName}"></TextBlock>
                                            </StackPanel>
                                        </StackPanel>
                                        <Border
                                            VerticalAlignment="Top"
                                            Height="48"
                                            Width="40"
                                            Margin="5,0,0,0"
                                            BorderBrush="#FF999999"
                                            BorderThickness="1">
                                            <Border.Resources>
                                                <BitmapImage
                                                    x:Key="DefaultUserPic"
                                                    UriSource="./Resources/Images/userpic.png"></BitmapImage>
                                            </Border.Resources>
                                            <Image
                                                Stretch="Fill"
                                                Source="{Binding UserImage,TargetNullValue={StaticResource DefaultUserPic}}"></Image>
                                        </Border>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Window.InputBindings>
        <KeyBinding
            Command="{Binding NewWorkflowCommand}"
            Key="N"
            Modifiers="Ctrl"></KeyBinding>
        <KeyBinding
            Command="{Binding OpenWorkflowCommand}"
            CommandParameter="FromServer"
            Key="O"
            Modifiers="Ctrl"></KeyBinding>
        <KeyBinding
            Command="{Binding OpenTaskActivitiesCommand}"
            Key="T"
            Modifiers="Ctrl"></KeyBinding>
        <KeyBinding
            Command="{Binding ManageWorkflowTypeCommand}"
            Key="M"
            Modifiers="Ctrl"></KeyBinding>
        <KeyBinding
            Command="{Binding MoveProjectCommand}"
            Key="M"
            Modifiers="Ctrl+Shift"></KeyBinding>
        <KeyBinding
            Command="{Binding CopyProjectCommand}"
            Key="C"
            Modifiers="Ctrl+Shift"></KeyBinding>
        <KeyBinding
            Command="{Binding DeleteProjectCommand}"
            Key="D"
            Modifiers="Ctrl+Shift"></KeyBinding>
        <KeyBinding
            Command="{Binding CompileCommand}"
            Key="B"
            Modifiers="Ctrl+Shift"></KeyBinding>
        <KeyBinding
            Command="{Binding PublishCommand}"
            Key="P"
            Modifiers="Ctrl+Shift"></KeyBinding>
        <KeyBinding
            Command="{Binding PrintCommand}"
            Key="P"
            Modifiers="Ctrl"></KeyBinding>
        <KeyBinding
            Command="{Binding SaveFocusedWorkflowCommand}"
            CommandParameter="ToServer"
            Key="S"
            Modifiers="Ctrl"></KeyBinding>
        <KeyBinding
            Command="{Binding RefreshCommand}"
            Key="F5"></KeyBinding>
        <KeyBinding
            Command="{Binding OpenCDSPackagesManagerCommand}"
            Key="M"
            Modifiers="Ctrl+Shift"></KeyBinding>
        <KeyBinding
            Command="{Binding OpenOptionsCommand}"
            Key="O"
            Modifiers="Ctrl+Shift"></KeyBinding>
        <KeyBinding
            Command="{Binding TogglePanelVisibilitiesCommand}"
            Key="F6"></KeyBinding>
        <KeyBinding
            Command="{Binding FindCommand}"
            Key="F"
            Modifiers="Control"></KeyBinding>
        <KeyBinding
            Command="{Binding ReplaceCommand}"
            Key="H"
            Modifiers="Control"></KeyBinding>
    </Window.InputBindings>
    <Grid
        Background="White"
        VerticalAlignment="Stretch"
        HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition
                Height="Auto"></RowDefinition>
            <RowDefinition
                Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <Border
            Height="28"
            BorderThickness="0"
            Background="Transparent"
            Grid.Row="0">
            <Menu
                Background="Transparent"
                Height="23"
                VerticalAlignment="Bottom"
                IsMainMenu="True"
                Name="menu">
                <MenuItem
                    Header="{x:Static res:Resources.FileMenuItem}">
                    <MenuItem
                        InputGestureText="Ctrl+N"
                        Command="{Binding NewWorkflowCommand}"
                        Header="{x:Static res:Resources.NewProjectMenuItem}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="/Microsoft.Support.Workflow.Foundry;component/Resources/Images/NewWorkflow_Large.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        InputGestureText="Ctrl+O"
                        Command="{Binding OpenWorkflowCommand}"
                        CommandParameter="FromServer"
                        Header="{x:Static res:Resources.OpenProjectMenuItem}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\Open_Network.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding OpenWorkflowCommand}"
                        CommandParameter="FromLocal"
                        Header="{x:Static res:Resources.OpenProjectFromDiskMenuItem}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\Open_Large.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        InputGestureText="Ctrl+T"
                        Command="{Binding OpenTaskActivitiesCommand}"
                        Header="{x:Static res:Resources.OpenMyTaskMenuItem}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\Open_Network.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        InputGestureText="Ctrl+M"
                        Command="{Binding ManageWorkflowTypeCommand}"
                        Header="{x:Static res:Resources.ManageWorkflowTypeMenuItem}"></MenuItem>
                    <Separator />
                    <MenuItem
                        Command="{Binding UnlockCommand}"
                        Header="{x:Static res:Resources.UnlockMenuItem}"></MenuItem>
                    <MenuItem
                        Command="{Binding CloseFocusedWorkflowCommand}"
                        CommandParameter="FromLocal"
                        Header="{x:Static res:Resources.CloseMenuItem}"></MenuItem>
                    <Separator />
                    <MenuItem
                        InputGestureText="Ctrl+S"
                        Command="{Binding SaveFocusedWorkflowCommand}"
                        CommandParameter="ToServer"
                        Header="{x:Static res:Resources.SaveProject}"></MenuItem>
                    <MenuItem
                        Command="{Binding SaveFocusedWorkflowCommand}"
                        CommandParameter="ToLocal"
                        Header="{x:Static res:Resources.SaveAsMenuItem}"></MenuItem>
                    <MenuItem
                        IsEnabled="{Binding TaskActivityOpened}"
                        Command="{Binding CheckInTaskActivityCommand}"
                        Header="{x:Static res:Resources.CheckInMyTask}"></MenuItem>
                    <Separator />
                    <MenuItem
                        Header="{x:Static res:Resources.MoveProjectMenuItem}"
                        InputGestureText="Ctrl+Shift+M"
                        Command="{Binding MoveProjectCommand}"></MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.CopyProjectMenuItem}"
                        InputGestureText="Ctrl+Shift+C"
                        Command="{Binding CopyProjectCommand}"></MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.DeleteProjectMenuItem}"
                        InputGestureText="Ctrl+Shift+D"
                        Command="{Binding DeleteProjectCommand}"></MenuItem>
                    <Separator />
                    <MenuItem
                        Header="{x:Static res:Resources.ChangeProjectAuthorMenuItem}"
                        Command="{Binding ChangeAuthorCommand}"></MenuItem>
                    <Separator />
                    <MenuItem
                        Command="{Binding ImportAssemblyCommand}"
                        Header="{x:Static res:Resources.ImportLibraryMenuItem}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\ImportAssembly_Large.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        InputGestureText="Ctrl+P"
                        Command="{Binding PrintCommand}"
                        Header="{x:Static res:Resources.PrintMenuItem}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\PrintIcon.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding PrintAllCommand}"
                        Header="{x:Static res:Resources.PrintAllMenuItem}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\PrintIcon.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        InputGestureText="Alt+F4"
                        Command="{Binding CloseCommand}"
                        Header="{x:Static res:Resources.ExitMenuItem}"></MenuItem>
                </MenuItem>
                <MenuItem
                    Header="{x:Static res:Resources.EditMenuItem}">
                    <MenuItem
                        Header="{x:Static res:Resources.UndoMenuItem}"
                        InputGestureText="Ctrl+Z"
                        Command="{Binding UndoCommand}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\Undo.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.RedoMenuItem}"
                        InputGestureText="Ctrl+Y"
                        Command="{Binding RedoCommand}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\Redo.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Header="{x:Static res:Resources.CutMenuItem}"
                        InputGestureText="Ctrl+X"
                        Command="{Binding CutCommand}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\CutIcon.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.CopyMenuItem}"
                        InputGestureText="Ctrl+C"
                        Command="{Binding CopyCommand}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\CopyIcon.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.PasteMenuItem}"
                        InputGestureText="Ctrl+V"
                        Command="{Binding PasteCommand}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\PasteIcon.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Header="{x:Static res:Resources.RefreshMenuItem}"
                        InputGestureText="F5"
                        Command="{Binding RefreshCommand}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\RefreshIcon.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator />
                    <MenuItem
                        Header="{x:Static res:Resources.Find}"
                        InputGestureText="Ctrl+F"
                        Command="{Binding FindCommand}">
                        <MenuItem.Icon>
                            <Image
                                Source="/Microsoft.Support.Workflow.Authoring.AddIns;component/Resources/search.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.Replace}"
                        InputGestureText="Ctrl+H"
                        Command="{Binding ReplaceCommand}">
                        <MenuItem.Icon>
                            <Image
                                Source="/Microsoft.Support.Workflow.Authoring.AddIns;component/Resources/replace.gif" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem
                    Header="{x:Static res:Resources.ViewMenuItem}">
                    <MenuItem
                        Header="{x:Static res:Resources.Designer}"
                        x:Name="menuDesigner"
                        IsCheckable="True"
                        IsChecked="False"></MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.Toolbox}"
                        x:Name="menuToolbox"
                        IsCheckable="True"
                        IsChecked="{Binding IsToolboxVisible, Mode=TwoWay}"></MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.ProjectExplorer}"
                        x:Name="menuPE"
                        IsCheckable="True"
                        IsChecked="{Binding IsProjectExplorerVisible, Mode=TwoWay}"></MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.PropertiesWindow}"
                        x:Name="menuProperty"
                        IsCheckable="True"
                        IsChecked="{Binding IsPropertiesVisible, Mode=TwoWay}"></MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.WorkflowInfo}"
                        x:Name="menuWfInfo"
                        IsCheckable="True"
                        IsChecked="{Binding IsWorkflowInfoVisible, Mode=TwoWay}"></MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.ContentWindow}"
                        x:Name="menuContent"
                        IsCheckable="True"
                        IsChecked="{Binding IsContentVisible, Mode=TwoWay}"></MenuItem>
                    <Separator />
                    <MenuItem
                        Header="{x:Static res:Resources.HideAllPanels}"
                        Command="{Binding TogglePanelVisibilitiesCommand}"
                        InputGestureText="F6"
                        IsCheckable="True"
                        IsChecked="{Binding IsAllPanelsHidden, Mode=OneWay}" />
                </MenuItem>
                <MenuItem
                    Header="{x:Static res:Resources.MarketplaceMenuItem}">
                    <MenuItem
                        Header="{x:Static res:Resources.BrowseMarketplaceMenuItem}"
                        Command="{Binding OpenMarketplaceCommand}" />
                    <MenuItem
                        Command="{Binding UploadAssemblyCommand}"
                        Header="{x:Static res:Resources.UploadActivityLibraryMenuItem}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\UploadAssemblies_Large.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding SelectAssemblyAndActivityCommand}"
                        Header="{x:Static res:Resources.SelectActivityLibraryMenuItem}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\SelectAssembly_Large.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem
                        Command="{Binding SaveFocusedWorkflowCommand}"
                        CommandParameter="ToMarketplace"
                        Header="{x:Static res:Resources.UploadProjectToMarketplaceMenuItem}"></MenuItem>
                </MenuItem>
                <MenuItem
                    Header="{x:Static res:Resources.BuildMenuItem}">
                    <MenuItem
                        InputGestureText="Ctrl+Shift+B"
                        Command="{Binding CompileCommand}"
                        Header="{x:Static res:Resources.CompileWorkflow}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\ComplieWorkflow_Large.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem
                    Header="{x:Static res:Resources.Publish}">
                    <MenuItem
                        InputGestureText="Ctrl+Shift+P"
                        Command="{Binding PublishCommand}"
                        Header="{x:Static res:Resources.PublishWorkflow}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\PublishWorkflow_Large.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                </MenuItem>
                <MenuItem
                    Header="{x:Static res:Resources.Tools}">
                    <MenuItem
                        Header="{x:Static res:Resources.EnvironmentSecurityOptionsMenuItem}"
                        Command="{Binding OpenEnvSecurityOptionsCommand}"></MenuItem>
                    <MenuItem
                        Header="{x:Static res:Resources.TenantSecurityOptionsMenuItem}"
                        Command="{Binding OpenTenantSecurityOptionsCommand}"></MenuItem>
                    <Separator></Separator>
                    <MenuItem
                        InputGestureText="Ctrl+Shift+M"
                        Header="{x:Static res:Resources.CDSPackagesManagerMenuItem}"
                        Command="{Binding OpenCDSPackagesManagerCommand}"></MenuItem>
                    <MenuItem
                        InputGestureText="Ctrl+Shift+O"
                        Header="{x:Static res:Resources.OptionsMenuItem}"
                        Command="{Binding OpenOptionsCommand}"></MenuItem>
                </MenuItem>
                <MenuItem
                    Header="{x:Static res:Resources.HelpMenuItem}"
                    IsEnabled="True">
                    <MenuItem
                        Visibility="Collapsed"
                        Height="25"
                        IsEnabled="False"
                        Header="{x:Static res:Resources.ViewHelp}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\Help.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator
                        Visibility="Collapsed" />
                    <MenuItem
                        Visibility="Collapsed"
                        Height="25"
                        IsEnabled="False"
                        Header="{x:Static res:Resources.CheckForUpdatesMenuItem}">
                        <MenuItem.Icon>
                            <Image
                                Height="16"
                                Width="16"
                                Source="Resources\Images\Update.png" />
                        </MenuItem.Icon>
                    </MenuItem>
                    <Separator
                        Visibility="Collapsed" />
                    <MenuItem
                        Height="25"
                        Command="{Binding ShowAboutViewCommand }"
                        Header="{x:Static res:Resources.AboutMicrosoftFoundry}"></MenuItem>
                </MenuItem>
            </Menu>
        </Border>
        <Grid
            Grid.Row="1"
            MouseLeftButtonDown="DocumentHost_MouseLeftButtonDown"
            Focusable="True"
            x:Name="WorkAreaCanvas">
            <Grid.Background>
                <LinearGradientBrush
                    StartPoint="0.5,0"
                    EndPoint="0.5,1">
                    <GradientStop
                        Color="#FFCDD1D6"
                        Offset="0"></GradientStop>
                    <GradientStop
                        Color="#FFBBBFC3"
                        Offset="1"></GradientStop>
                </LinearGradientBrush>
            </Grid.Background>
            <Grid.RowDefinitions>
                <RowDefinition
                    Height="auto"></RowDefinition>
                <RowDefinition
                    Height="*"></RowDefinition>
            </Grid.RowDefinitions>
            <t:RadDocking
                Grid.Column="1"
                AllowUnsafeMode="True"
                x:Name="radDocking"
                Grid.Row="1"
                VerticalAlignment="Stretch"
                Visibility="{Binding IsBusy,Converter={StaticResource VisibleWhenFalse}}"
                Margin="0,2">
                <t:RadDocking.GeneratedItemsFactory>
                    <local:NonTrasparentWindowsGeneratedItemsFactory />
                </t:RadDocking.GeneratedItemsFactory>
                <t:RadDocking.Background>
                    <LinearGradientBrush
                        StartPoint="0.5,0"
                        EndPoint="0.5,1">
                        <GradientStop
                            Color="#FFCDD1D6"
                            Offset="0"></GradientStop>
                        <GradientStop
                            Color="#FFBBBFC3"
                            Offset="1"></GradientStop>
                    </LinearGradientBrush>
                </t:RadDocking.Background>
                <t:RadSplitContainer
                    InitialPosition="DockedLeft">
                    <t:RadPaneGroup
                        TabStripPlacement="Bottom">
                        <t:RadPane
                            Header="{x:Static res:Resources.Toolbox}"
                            IsSelected="{Binding IsToolboxSelected}"
                            CanFloat="True"
                            CanDockInDocumentHost="False"
                            IsPinned="{Binding IsToolboxPinned, Mode=TwoWay}"
                            DataContext="{Binding DataContext, ElementName=mainWindow}"
                            IsHidden="{Binding IsToolboxVisible, Mode=TwoWay, Converter={StaticResource BooleanInverterConverter}}"
                            ContextMenuTemplate="{x:Null}"
                            Content="{Binding FocusedWorkflowItem.Toolbox}"></t:RadPane>
                        <t:RadPane
                            Header="{x:Static res:Resources.ProjectExplorer}"
                            IsSelected="{Binding IsProjectExplorerSelected}"
                            CanFloat="True"
                            CanDockInDocumentHost="False"
                            DataContext="{Binding DataContext, ElementName=mainWindow}"
                            IsPinned="{Binding IsProjectExplorerPinned, Mode=TwoWay}"
                            IsHidden="{Binding IsProjectExplorerVisible, Mode=TwoWay, Converter={StaticResource BooleanInverterConverter}}"
                            ContextMenuTemplate="{x:Null}"
                            Content="{Binding FocusedWorkflowItem.PEView}"></t:RadPane>
                    </t:RadPaneGroup>
                </t:RadSplitContainer>
                <t:RadSplitContainer
                    InitialPosition="DockedRight">
                    <t:RadPaneGroup
                        TabStripPlacement="Bottom">
                        <t:RadPane
                            Header="{x:Static res:Resources.Properties}"
                            IsSelected="{Binding IsPropertiesSelected}"
                            CanFloat="True"
                            CanDockInDocumentHost="False"
                            DataContext="{Binding DataContext, ElementName=mainWindow}"
                            IsPinned="{Binding IsPropertiesPinned, Mode=TwoWay}"
                            IsHidden="{Binding IsPropertiesVisible, Mode=TwoWay, Converter={StaticResource BooleanInverterConverter}}"
                            ContextMenuTemplate="{x:Null}"
                            Content="{Binding FocusedWorkflowItem.PropertyView}"></t:RadPane>
                        <t:RadPane
                            Header="{x:Static res:Resources.WorkflowInfo}"
                            IsSelected="{Binding IsWorkflowInfoSelected}"
                            CanFloat="True"
                            CanDockInDocumentHost="False"
                            DataContext="{Binding DataContext, ElementName=mainWindow}"
                            IsPinned="{Binding IsWorkflowInfoPinned, Mode=TwoWay}"
                            IsHidden="{Binding IsWorkflowInfoVisible, Mode=TwoWay, Converter={StaticResource BooleanInverterConverter}}"
                            ContextMenuTemplate="{x:Null}">
                            <StackPanel
                                Orientation="Vertical">
                                <TextBlock
                                    Margin="10,10,10,0"
                                    Text="{x:Static res:Resources.WorkflowName}" />
                                <TextBox
                                    Margin="10,0,10,0"
                                    MaxLength="50"
                                    IsEnabled="{Binding FocusedWorkflowItem.IsReadOnly, Mode=TwoWay, Converter={StaticResource BooleanInverterConverter}}"
                                    Text="{Binding FocusedWorkflowItem.WorkflowName, UpdateSourceTrigger=PropertyChanged}"
                                    x:Name="wfName" />
                                <TextBlock
                                    Margin="10,5,10,0"
                                    Text="{x:Static res:Resources.Environment}"></TextBlock>
                                <TextBox
                                    Margin="10,0,10,0"
                                    IsReadOnly="True"
                                    Text="{Binding FocusedWorkflowItem.Env}"></TextBox>
                                <common:VersionDisplay
                                    x:Name="VersionDisplay"
                                    Margin="10,5,10,0"
                                    Caption="{x:Static res:Resources.WorkflowVersion}"
                                    IsEnabled="{Binding FocusedWorkflowItem.IsReadOnly, Mode=TwoWay, Converter={StaticResource BooleanInverterConverter}}"
                                    HasMajorChanged="{Binding FocusedWorkflowItem.HasMajorChanged, Mode=TwoWay}"
                                    Version="{Binding FocusedWorkflowItem.Version, Mode=TwoWay}" />
                                <TextBlock
                                    Margin="10,5,10,0"
                                    Text="{x:Static res:Resources.Tags}" />
                                <TextBox
                                    Margin="10,0,10,0"
                                    IsEnabled="{Binding FocusedWorkflowItem.IsReadOnly, Mode=TwoWay, Converter={StaticResource BooleanInverterConverter}}"
                                    Text="{Binding FocusedWorkflowItem.Tags, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" />
                                <TextBlock
                                    Visibility="{Binding FocusedWorkflowItem.IsValid, Converter={StaticResource VisibleWhenFalse}}"
                                    Foreground="Red"
                                    Margin="10,5,10,0"
                                    TextWrapping="Wrap"
                                    Text="{Binding FocusedWorkflowItem.ErrorMessage}" />
                            </StackPanel>
                        </t:RadPane>
                        <t:RadPane
                            Header="{x:Static res:Resources.Content}"
                            IsSelected="{Binding IsContentSelected}"
                            CanDockInDocumentHost="False"
                            DataContext="{Binding DataContext, ElementName=mainWindow}"
                            IsPinned="{Binding IsContentPinned, Mode=TwoWay}"
                            IsHidden="{Binding IsContentVisible, Mode=TwoWay, Converter={StaticResource BooleanInverterConverter}}"
                            ContextMenuTemplate="{x:Null}"
                            CanFloat="True">
                            <view:ContentSelectorView></view:ContentSelectorView>
                        </t:RadPane>
                    </t:RadPaneGroup>
                </t:RadSplitContainer>
                <t:RadDocking.DocumentHost>
                    <t:DocumentHost
                        Visibility="{Binding IsChecked,ElementName=menuDesigner,Converter={StaticResource VisibleWhenEnabledConverter}}">
                        <TabControl
                            ItemsSource="{Binding WorkflowItems}"
                            SelectedValue="{Binding FocusedWorkflowItem, Mode=TwoWay}"
                            SelectionChanged="TabControl_SelectionChanged"
                            Name="TabWorkflow">
                            <TabControl.Resources>
                                <Style
                                    TargetType="{x:Type TabItem}">
                                    <Style.Resources>
                                        <Style
                                            TargetType="{x:Type Button}">
                                            <Setter
                                                Property="FocusVisualStyle"
                                                Value="{x:Null}" />
                                            <Setter
                                                Property="Background"
                                                Value="{DynamicResource ButtonNormalBackground}" />
                                            <Setter
                                                Property="BorderBrush"
                                                Value="{DynamicResource ButtonNormalBorder}" />
                                            <Setter
                                                Property="BorderThickness"
                                                Value="1" />
                                            <Setter
                                                Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                                            <Setter
                                                Property="HorizontalContentAlignment"
                                                Value="Center" />
                                            <Setter
                                                Property="VerticalContentAlignment"
                                                Value="Center" />
                                            <Setter
                                                Property="Padding"
                                                Value="4" />
                                            <Setter
                                                Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate
                                                        TargetType="{x:Type Button}">
                                                        <Grid>
                                                            <Border
                                                                SnapsToDevicePixels="true"
                                                                x:Name="Chrome"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                                CornerRadius="2"
                                                                Opacity="0" />
                                                            <ContentPresenter
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                                Margin="{TemplateBinding Padding}"
                                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                                RecognizesAccessKey="True" />
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger
                                                                Property="IsMouseOver"
                                                                Value="True">
                                                                <Setter
                                                                    Property="Opacity"
                                                                    TargetName="Chrome"
                                                                    Value="1" />
                                                                <Setter
                                                                    Property="Background"
                                                                    TargetName="Chrome"
                                                                    Value="{DynamicResource ButtonOverBackground}" />
                                                            </Trigger>
                                                            <Trigger
                                                                Property="IsPressed"
                                                                Value="True">
                                                                <Setter
                                                                    Property="Opacity"
                                                                    TargetName="Chrome"
                                                                    Value="1" />
                                                                <Setter
                                                                    Property="Background"
                                                                    TargetName="Chrome"
                                                                    Value="{DynamicResource ButtonPressedBackground}" />
                                                            </Trigger>
                                                            <Trigger
                                                                Property="IsEnabled"
                                                                Value="False">
                                                                <Setter
                                                                    Property="Foreground"
                                                                    Value="#ADADAD" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Style.Resources>
                                    <Setter
                                        Property="FocusVisualStyle"
                                        Value="{DynamicResource TabItemFocusVisual}" />
                                    <Setter
                                        Property="Foreground"
                                        Value="Black" />
                                    <Setter
                                        Property="Padding"
                                        Value="6,1,6,1" />
                                    <Setter
                                        Property="BorderBrush"
                                        Value="{DynamicResource TabControlNormalBorderBrush}" />
                                    <Setter
                                        Property="Background"
                                        Value="{DynamicResource ButtonNormalBackground}" />
                                    <Setter
                                        Property="HorizontalContentAlignment"
                                        Value="Stretch" />
                                    <Setter
                                        Property="VerticalContentAlignment"
                                        Value="Stretch" />
                                    <Setter
                                        Property="Header"
                                        Value="{Binding Path=Name}" />
                                    <Setter
                                        Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate
                                                TargetType="{x:Type TabItem}">
                                                <Grid
                                                    SnapsToDevicePixels="true">
                                                    <Border
                                                        x:Name="Bd"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                        BorderThickness="1,1,1,0">
                                                        <DockPanel
                                                            x:Name="ContentPanel">
                                                            <Button
                                                                x:Name="CloseTabButton"
                                                                Tag="{Binding}"
                                                                Click="CloseTabButton_Click"
                                                                Command="{Binding Path=CloseFocusedWorkflowCommand}"
                                                                HorizontalAlignment="Center"
                                                                Margin="3,0,3,0"
                                                                VerticalAlignment="Center"
                                                                Width="16"
                                                                Height="16"
                                                                DockPanel.Dock="Right"
                                                                Style="{DynamicResource CloseableTabItemButtonStyle}"
                                                                ToolTip="{x:Static res:Resources.CloseTab}">
                                                                <Path
                                                                    x:Name="Path"
                                                                    Stretch="Fill"
                                                                    StrokeThickness="0.5"
                                                                    Stroke="#FF333333"
                                                                    Fill="#FF969696"
                                                                    Data="F1 M 2.28484e-007,1.33331L 1.33333,0L 4.00001,2.66669L 6.66667,6.10352e-005L 8,1.33331L 5.33334,4L 8,6.66669L 6.66667,8L 4,5.33331L 1.33333,8L 1.086e-007,6.66669L 2.66667,4L 2.28484e-007,1.33331 Z "
                                                                    HorizontalAlignment="Stretch"
                                                                    VerticalAlignment="Stretch" />
                                                            </Button>
                                                            <StackPanel
                                                                Orientation="Horizontal">
                                                                <ContentPresenter
                                                                    x:Name="Content"
                                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                    ContentSource="Header"
                                                                    RecognizesAccessKey="False"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    Margin="{TemplateBinding Padding}" />
                                                                <TextBlock
                                                                    Text="{x:Static res:Resources.Asterisk}"
                                                                    Visibility="{Binding IsSavedToServer, Converter={StaticResource VisibleWhenFalse}}"></TextBlock>
                                                            </StackPanel>
                                                        </DockPanel>
                                                    </Border>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger
                                                        Property="IsMouseOver"
                                                        SourceName="CloseTabButton"
                                                        Value="True">
                                                        <Setter
                                                            Property="Fill"
                                                            TargetName="Path"
                                                            Value="#FFB83C3D" />
                                                    </Trigger>
                                                    <Trigger
                                                        Property="IsPressed"
                                                        SourceName="CloseTabButton"
                                                        Value="True">
                                                        <Setter
                                                            Property="Fill"
                                                            TargetName="Path"
                                                            Value="#FF9D3838" />
                                                    </Trigger>
                                                    <Trigger
                                                        Property="IsMouseOver"
                                                        Value="true">
                                                        <Setter
                                                            Property="Background"
                                                            TargetName="Bd"
                                                            Value="{DynamicResource TabItemHotBackground}" />
                                                    </Trigger>
                                                    <Trigger
                                                        Property="IsSelected"
                                                        Value="true">
                                                        <Setter
                                                            Property="Panel.ZIndex"
                                                            Value="1" />
                                                        <Setter
                                                            Property="Background"
                                                            TargetName="Bd"
                                                            Value="{DynamicResource TabItemSelectedBackground}" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition
                                                                Property="IsSelected"
                                                                Value="False" />
                                                            <Condition
                                                                Property="IsMouseOver"
                                                                Value="true" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter
                                                            Property="BorderBrush"
                                                            TargetName="Bd"
                                                            Value="{StaticResource TabItemHotBorderBrush}" />
                                                    </MultiTrigger>
                                                    <Trigger
                                                        Property="TabStripPlacement"
                                                        Value="Bottom">
                                                        <Setter
                                                            Property="BorderThickness"
                                                            TargetName="Bd"
                                                            Value="1,0,1,1" />
                                                    </Trigger>
                                                    <Trigger
                                                        Property="TabStripPlacement"
                                                        Value="Left">
                                                        <Setter
                                                            Property="BorderThickness"
                                                            TargetName="Bd"
                                                            Value="1,1,0,1" />
                                                    </Trigger>
                                                    <Trigger
                                                        Property="TabStripPlacement"
                                                        Value="Right">
                                                        <Setter
                                                            Property="BorderThickness"
                                                            TargetName="Bd"
                                                            Value="0,1,1,1" />
                                                    </Trigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition
                                                                Property="IsSelected"
                                                                Value="true" />
                                                            <Condition
                                                                Property="TabStripPlacement"
                                                                Value="Top" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter
                                                            Property="Margin"
                                                            Value="-2,-2,-2,-1" />
                                                        <Setter
                                                            Property="Margin"
                                                            TargetName="ContentPanel"
                                                            Value="0,0,0,1" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition
                                                                Property="IsSelected"
                                                                Value="true" />
                                                            <Condition
                                                                Property="TabStripPlacement"
                                                                Value="Bottom" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter
                                                            Property="Margin"
                                                            Value="-2,-1,-2,-2" />
                                                        <Setter
                                                            Property="Margin"
                                                            TargetName="ContentPanel"
                                                            Value="0,1,0,0" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition
                                                                Property="IsSelected"
                                                                Value="true" />
                                                            <Condition
                                                                Property="TabStripPlacement"
                                                                Value="Left" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter
                                                            Property="Margin"
                                                            Value="-2,-2,-1,-2" />
                                                        <Setter
                                                            Property="Margin"
                                                            TargetName="ContentPanel"
                                                            Value="0,0,1,0" />
                                                    </MultiTrigger>
                                                    <MultiTrigger>
                                                        <MultiTrigger.Conditions>
                                                            <Condition
                                                                Property="IsSelected"
                                                                Value="true" />
                                                            <Condition
                                                                Property="TabStripPlacement"
                                                                Value="Right" />
                                                        </MultiTrigger.Conditions>
                                                        <Setter
                                                            Property="Margin"
                                                            Value="-1,-2,-2,-2" />
                                                        <Setter
                                                            Property="Margin"
                                                            TargetName="ContentPanel"
                                                            Value="1,0,0,0" />
                                                    </MultiTrigger>
                                                    <Trigger
                                                        Property="IsEnabled"
                                                        Value="False">
                                                        <Setter
                                                            Property="Background"
                                                            TargetName="Bd"
                                                            Value="{DynamicResource TabItemDisabledBackground}" />
                                                        <Setter
                                                            Property="BorderBrush"
                                                            TargetName="Bd"
                                                            Value="{DynamicResource TabItemDisabledBorderBrush}" />
                                                        <Setter
                                                            Property="Foreground"
                                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </TabControl.Resources>
                            <TabControl.ContentTemplate>
                                <DataTemplate>
                                    <ContentControl
                                        Content="{Binding DesignerView}"></ContentControl>
                                </DataTemplate>
                            </TabControl.ContentTemplate>
                            <TabControl.Style>
                                <Style
                                    TargetType="{x:Type TabControl}"
                                    BasedOn="{StaticResource {x:Type TabControl}}">
                                    <Style.Triggers>
                                        <Trigger
                                            Property="SelectedValue"
                                            Value="{x:Null}">
                                            <Setter
                                                Property="Visibility"
                                                Value="Collapsed" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TabControl.Style>
                        </TabControl>
                    </t:DocumentHost>
                </t:RadDocking.DocumentHost>
            </t:RadDocking>
        </Grid>
        <t:RadBusyIndicator
            DisplayAfter="00:00:00"
            FontSize="18"
            Grid.RowSpan="2"
            IsBusy="{Binding IsBusy}"
            BusyContent="{Binding BusyCaption}" />
    </Grid>
</Window>